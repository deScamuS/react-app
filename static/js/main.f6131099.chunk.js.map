{"version":3,"sources":["crud-operations.jpg","components/UserTable.js","components/AddUserForm.js","components/EditUserForm.js","App.js","index.js"],"names":["module","exports","UserTable","props","users","length","map","user","key","id","name","username","outline","color","size","onClick","editRow","className","event","deleteUser","colSpan","AddUserForm","initialFormState","useState","setUser","handleInputChange","target","value","onSubmit","preventDefault","addUser","type","onChange","EditUserForm","currentUser","useEffect","updateUser","setEditing","App","setUsers","editing","usernamem","setCurrentUser","style","marginRight","src","logo","alt","updatedUser","textDecoration","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6131099.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/crud-operations.de2f4d23.jpg\";","import React from \"react\"\nimport { MDBTable, MDBTableBody, MDBTableHead } from \"mdbreact\"\nimport { MDBBtn } from \"mdbreact\"\nimport \"./UserTable.css\"\n\nconst UserTable = props => (\n  <MDBTable>\n    <MDBTableHead>\n      <tr>\n        <th>#</th>\n        <th>Sailor</th>\n        <th>Actions </th>\n      </tr>\n    </MDBTableHead>\n    <MDBTableBody>\n      {props.users.length > 0 ? (\n        props.users.map(user => (\n          <tr key={user.id}>\n            <td>{user.name}</td>\n            <td>{user.username}</td>\n            <td>\n              <MDBBtn\n                outline color=\"light-blue\"\n                size=\"sm\"\n                onClick={() => {\n                  props.editRow(user)}}\n                className=\"button muted-button\"\n\n              >\n                edit\n              </MDBBtn>\n              <MDBBtn\n                onClick={event => props.deleteUser(user.id)}\n                className=\"button muted-button\"\n                outline color=\"light-blue\"\n                size=\"sm\"\n              >\n                delete\n              </MDBBtn>\n            </td>\n          </tr>\n        ))\n      ) : (\n        <tr>\n          <td colSpan={3}>No Users</td>\n        </tr>\n      )}\n    </MDBTableBody>\n  </MDBTable>\n)\nexport default UserTable\n","/* eslint-disable no-unused-vars */\nimport React, { useState } from \"react\"\nimport { MDBContainer, MDBBtn } from \"mdbreact\"\nimport \"./AddUserForm.css\"\n\nconst AddUserForm = props => {\n  const initialFormState = { id: null, name: \"\", username: \"\" }\n  const [user, setUser] = useState(initialFormState)\n\n  const handleInputChange = event => {\n    const { name, value } = event.target\n\n    setUser({ ...user, [name]: value })\n  }\n  return (\n    <MDBContainer>\n      <form\n        onSubmit={event => {\n          event.preventDefault()\n          if (!user.name || !user.username) return\n          props.addUser(user)\n          setUser(initialFormState)\n        }}\n      >\n        <label>Sail #</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={user.name}\n          onChange={handleInputChange}\n        />\n        <label>Sailor</label>\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={user.username}\n          onChange={handleInputChange}\n        />\n        <MDBBtn\n          className=\".waves-effect\"\n          outline\n          color=\"light-blue\"\n          onChange=\"{handleInputChange}\"\n          onClick={() => {\n            props.addUser(user)\n          }}\n        >\n          Add User\n        </MDBBtn>\n      </form>\n    </MDBContainer>\n  )\n}\n\nexport default AddUserForm\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from \"react\"\nimport { MDBContainer, MDBBtn } from \"mdbreact\"\n\nconst EditUserForm = props => {\n  const [user, setUser] = useState(props.currentUser)\n  useEffect(() => {\n    setUser(props.currentUser)\n  }, [props])\n  // Tell React to skip applying an effect if certain values havenâ€™t changed between re-renders?[ props ]\n\n  const handleInputChange = event => {\n    const { name, value } = event.target\n    setUser({ ...user, [name]: value })\n  }\n  return (\n    <MDBContainer>\n      <form\n        onSubmit={event => {\n          event.preventDefault()\n          props.updateUser(user.id, user)\n        }}\n      >\n        <label>Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={user.name}\n          onChange={handleInputChange}\n        />\n        <label>Username</label>\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={user.username}\n          onChange={handleInputChange}\n        />\n        <MDBBtn\n          className=\".waves-effect\"\n          outline\n          color=\"primary\" >\n          Update User\n        </MDBBtn>\n           <MDBBtn\n          className=\".waves-effect\"\n          outline\n          color=\"secondary\"\n          onClick={() => props.setEditing(false)}\n        >\n          Cancel\n        </MDBBtn>\n      </form>\n    </MDBContainer>\n  )\n}\nexport default EditUserForm\n\n\n          \n          \n       \n       ","/* eslint-disable no-undef */\n/* eslint-disable no-unused-vars */\nimport React, { useState } from \"react\"\nimport UserTable from \"./components/UserTable\"\nimport AddUserForm from \"./components/AddUserForm\"\nimport EditUserForm from \"./components/EditUserForm\"\nimport logo from './crud-operations.jpg'\nimport \"./App.css\"\n\nconst App = () => {\n  const usersData = [{ id: 0, name: 'M153', username: \"DeSantis\" }]\n\n  const [users, setUsers] = useState(usersData)\n\n  //set up for  editing and updating...\n  const [editing, setEditing] = useState(false)\n  const intialFormState = { id: null, name: \"\", usernamem: \"\" }\n  const [currentUser, setCurrentUser] = useState(intialFormState)\n\n  //functions\n  const addUser = user => {\n    user.id = users.length + 1\n    setUsers([...users, user])\n  }\n  const deleteUser = id => {\n    setEditing(false)\n    setUsers(users.filter(user => user.id !== id))\n  }\n\n  const editRow = user => {\n    setEditing(true)\n    setCurrentUser({ id: user.id, name: user.name, username: user.username })\n  }\n\n  const updateUser = (id, updatedUser) => {\n    setEditing(false)\n    setUsers(users.map(user => (user.id === id ? updatedUser : user)))\n  }\n\n  return (\n    <div className='container'>\n\n        <h1 style={{ color: \"#34495E\", marginRight: '45px' }}>REACT HOOKS</h1>\n      <div className=\"flex-row\" >\n        <div className=\"flex-large\">\n          <img src={logo} alt=\"\" className='responsive' />\n          {editing ? (\n            <div>\n              <h2 >Edit User</h2>\n              <EditUserForm\n                editing={editing}\n                setEditing={setEditing}\n                currentUser={currentUser}\n                updateUser={updateUser}\n              />\n            </div>\n          ) : (\n              <div>\n                <h2 style={{ textDecoration: \"underline\", color: \"#34495E\" }}>\n                  Sailor\n              </h2>\n                <AddUserForm addUser={addUser} />\n              </div>\n            )}\n        </div>\n        <div className=\"flex-large\">\n          <h2 style={{ textDecoration: \"underline\", color: \"#34495E\" }}>\n            View Race Results <br />\n\n          </h2>\n          <UserTable users={users} deleteUser={deleteUser} editRow={editRow} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport \"@fortawesome/fontawesome-free/css/all.min.css\"\nimport \"bootstrap-css-only/css/bootstrap.min.css\"\nimport \"mdbreact/dist/css/mdb.css\"\n\nimport App from \"./App\"\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}